//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReleaseManagementAssignment
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class releasedbEntities : DbContext
    {
        public releasedbEntities()
            : base("name=releasedbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<EmployeeList> EmployeeLists { get; set; }
        public virtual DbSet<EmpTeam> EmpTeams { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<Team> Teams { get; set; }
    
        public virtual ObjectResult<proc_CheckLogin_Result> proc_CheckLogin(Nullable<int> un, string pass)
        {
            var unParameter = un.HasValue ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(int));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_CheckLogin_Result>("proc_CheckLogin", unParameter, passParameter);
        }
    
        public virtual int S_InsertIntoProject_p(Nullable<int> pid, string pname)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("Pid", pid) :
                new ObjectParameter("Pid", typeof(int));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("Pname", pname) :
                new ObjectParameter("Pname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("S_InsertIntoProject_p", pidParameter, pnameParameter);
        }
    }
}
